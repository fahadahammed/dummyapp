apiVersion: v1
kind: Namespace
metadata:
  name: dummyapp
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  namespace: dummyapp
  name: 'dummyapp.fahadahammed.com'
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dummyapp
  secretName: 'dummyapp.fahadahammed.com.cert'
  subject:
    organizations:
      - DummyApp
  dnsNames:
  - 'dummyapp.fahadahammed.com'
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dummyapp
  name: dummyapp-deployment
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: dummyapp
      app.kubernetes.io/instance: dummyapp
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dummyapp
        app.kubernetes.io/instance: dummyapp
        app.kubernetes.io/version: "v6"
    spec:
      containers:
      - name: dummyapp
        image: 'docker.io/fahadahammed/dummyapp:v6'
        env:
        - name: VERSION
          value: "v6"
        - name: STARTUP_DELAY
          value: "30"
        resources:
          requests:
            memory: "50Mi"
            cpu: "10m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        ports:
        - containerPort: 7551
          name: http-port
        livenessProbe:
          httpGet:
            path: /probe/liveness
            port: 7551
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
           httpGet:
             path: /probe/readiness
             port: 7551
           initialDelaySeconds: 3
           periodSeconds: 3
        startupProbe:
          httpGet:
            path: /probe/startup
            port: 7551
          timeoutSeconds: 60
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: dummyapp
  name: dummyapp-service
  labels:
    app.kubernetes.io/name: dummyapp
    app.kubernetes.io/instance: dummyapp
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: http-port
    protocol: TCP
    targetPort: 7551
  selector:
    app.kubernetes.io/name: dummyapp
    app.kubernetes.io/instance: dummyapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: dummyapp
  name: dummyapp-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.org/server-snippets: "gzip on;"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  tls:
  - hosts:
    - 'dummyapp.fahadahammed.com'
    secretName: 'dummyapp.fahadahammed.com.cert'
  rules:
  - host: 'dummyapp.fahadahammed.com'
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dummyapp-service
            port:
              number: 80